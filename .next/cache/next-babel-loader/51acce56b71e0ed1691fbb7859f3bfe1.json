{"ast":null,"code":"var _jsxFileName = \"/Users/omeraksu/https/vamos/store/index.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useEffect, useState } from 'react';\nimport { THEME } from '../constants';\nconst StoreContext = /*#__PURE__*/createContext(null);\nexport function StoreProvider({\n  children\n}) {\n  const {\n    0: theme,\n    1: themeSet\n  } = useState(null);\n  useEffect(() => {\n    const theme = localStorage.getItem('THEME') || THEME.LIGHT;\n    themeSet(theme);\n  }, []);\n\n  const changeTheme = theme => {\n    themeSet(theme);\n    localStorage.setItem('THEME', theme);\n  };\n\n  useEffect(() => {\n    if (!theme) return;\n    const $html = document.querySelector('html');\n    $html.classList.remove(...$html.classList);\n    $html.classList.add(theme.toString());\n  }, [theme]);\n  return __jsx(StoreContext.Provider, {\n    value: {\n      theme,\n      changeTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport default StoreContext;","map":{"version":3,"sources":["/Users/omeraksu/https/vamos/store/index.js"],"names":["React","createContext","useEffect","useState","THEME","StoreContext","StoreProvider","children","theme","themeSet","localStorage","getItem","LIGHT","changeTheme","setItem","$html","document","querySelector","classList","remove","add","toString"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,IAAD,CAAlC;AAEA,OAAO,SAASK,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAqC;AAC1C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,KAAK,GAAGE,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiCP,KAAK,CAACQ,KAArD;AACAH,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMK,WAAW,GAAIL,KAAD,IAAW;AAC7BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BN,KAA9B;AACD,GAHD;;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,KAAL,EAAY;AACZ,UAAMO,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAd;AACAF,IAAAA,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAuB,GAAGJ,KAAK,CAACG,SAAhC;AACAH,IAAAA,KAAK,CAACG,SAAN,CAAgBE,GAAhB,CAAoBZ,KAAK,CAACa,QAAN,EAApB;AACD,GALQ,EAKN,CAACb,KAAD,CALM,CAAT;AAOA,SACE,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAF;AAASK,MAAAA;AAAT,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QADH,CADF;AAKD;AAED,eAAeF,YAAf","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\nimport { THEME } from '../constants'\n\nconst StoreContext = createContext(null)\n\nexport function StoreProvider({ children }) {\n  const [theme, themeSet] = useState(null)\n\n  useEffect(() => {\n    const theme = localStorage.getItem('THEME') || THEME.LIGHT\n    themeSet(theme)\n  }, [])\n\n  const changeTheme = (theme) => {\n    themeSet(theme)\n    localStorage.setItem('THEME', theme)\n  }\n\n  useEffect(() => {\n    if (!theme) return\n    const $html = document.querySelector('html')\n    $html.classList.remove(...$html.classList)\n    $html.classList.add(theme.toString())\n  }, [theme])\n\n  return (\n    <StoreContext.Provider value={{ theme, changeTheme }}>\n      {children}\n    </StoreContext.Provider>\n  )\n}\n\nexport default StoreContext\n"]},"metadata":{},"sourceType":"module"}